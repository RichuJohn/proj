@using Microsoft.AspNet.Identity
@model FitnessGuru_Main.Models.GymMemberIndexViewModel

@{
    ViewBag.Title = "Member Home";
}
<div id="userId" style="display: none">@ViewBag.UserId</div>

<div class="row">
    <div class="col-xs-6">
        <h2>Welcome @ViewBag.Name</h2>
    </div>
    <div class="col-xs-6">
        <h3>@Html.ActionLink("View Schedule In Calendar", "CalendarView", "GymMembers", null, new { @class = "btn btn-primary" })</h3>
    </div>
</div>


@*@{
        var isUserJoinedSessionsEmpty = Model.JoinedSessions.Count() == 0;
        var isUpcomingSessionsEmpty = Model.CompleteSessions.Count() == 0;
    }*@

<div class="container-fluid">
    <div class="row">
        <div class="col-xs-12">

            <h3>Are you prepared for your upcoming sessions</h3>

        </div>
    </div>

    <div style="margin:30px" class="row">
        <div class="col-xs-12">

            <table data-user-id="@User.Identity.GetUserId()" id="joinedsessions" class="table table-bordered table-condensed table-responsive">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.JoinedSessions.FirstOrDefault().SessionName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.JoinedSessions.FirstOrDefault().SessionAt)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.JoinedSessions.FirstOrDefault().Desc)
                        </th>
                        <th>
                            Trainer
                        </th>
                        <th>Action</th>
                    </tr>
                </thead>

                <tbody></tbody>

            </table>

        </div>
    </div>


    <div class="row">
        <div class="col-xs-12">
            <h3>Are you ready for yet another challenge!!! Join any upcoming sessions</h3>
        </div>
    </div>


    <div style="margin:30px" class="row">
        <div class="col-xs-12">
            <table data-user-id="@User.Identity.GetUserId()" id="upcomingsessions" class="table table-bordered table-condensed table-responsive">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.CompleteSessions.FirstOrDefault().SessionName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CompleteSessions.FirstOrDefault().SessionAt)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CompleteSessions.FirstOrDefault().Desc)
                        </th>
                        <th>
                            Trainer
                        </th>
                        <th>Action</th>
                    </tr>

                </thead>
                <tbody></tbody>

            </table>
        </div>
    </div>
</div>


@section scripts
{

    <script src="~/Scripts/memberSessionIndex.js"></script>
    <script src="~/Scripts/toastr.js"></script>
    <script>
        $(document).ready(function () {

            console.log("@ViewBag.CurrentTime");

            var joinedsessionstable = $("#joinedsessions")
            var joinedtable = joinedsessionstable.DataTable(
                {
                    "order": [[1, "asc"]],

                    ajax: {
                        url: '/api/sessions/GetJoinedSessionsForTable/' + joinedsessionstable.attr("data-user-id"),
                        dataSrc: ""
                    },
                    columns: [
                        {
                            data: "sessionName"
                        },
                        {
                            data: "sessionAt",
                            render: function(data) {
                                return moment(data).format('YYYY-MM-DD HH:mm');
                            }
                        },
                        {
                            data: "desc"
                        },
                        {
                            data: "gymMember.firstName",
                            render: function(data, type, session) {
                                return "<a class='btn-link' href='/gymmembers/details/" +
                                    session.trainerId +
                                    "'>" +
                                    session.gymMember.firstName +
                                    "</a>";
                            }
                        },
                        {
                            data: "id",
                            render: function(data) {
                                return "<button data-session-id=" +
                                    data +
                                    "  class='btn btn-default js-optout'>Opt Out</button>"
                            }
                        }
                    ]

                }
            );
            joinedsessionstable.on("click",
                ".js-optout",
                function() {
                    var button = $(this)
                    if (confirm("Are you sure you want to opt out from this session?")) {
                        var sessionId = button.attr("data-session-id");

                        $.ajax({
                            url: '/GymMembers/OptOutFromSession/' + button.attr("data-session-id"),
                            method: "POST",
                            success: function() {
                                toastr.success("Successfully Opted Out from session");
                                joinedtable.ajax.reload();
                                upcomingtable.ajax.reload();
                                data.forEach(function (item) {
                                    if (parseInt(item.id) === parseInt(sessionId)) {
                                        item.joined = !item.joined;
                                        return false;
                                    }
                                });

                                joinedSessions = [];
                                upcomingSessions = [];

                                data.forEach(function (item) {
                                    if (item.joined)
                                        joinedSessions.push(item);
                                });

                                data.forEach(function (item) {
                                    if (!item.joined)
                                        upcomingSessions.push(item);
                                });

                            },
                            error: function() {
                                toastr.error("Could not opt out from the session");

                            }

                        });

                    }
                });

            var upcomingsessionstable = $("#upcomingsessions")
            var upcomingtable = upcomingsessionstable.DataTable(
                {
                    "order": [[1, "asc"]],

                    ajax: {
                        url: '/api/sessions/GetUpcomingSessionsForTable/' + upcomingsessionstable.attr("data-user-id"),
                        dataSrc: ""
                    },
                    columns: [
                        {
                            data: "sessionName"
                        },
                        {
                            data: "sessionAt",
                            render: function(data) {
                                return moment(data).format('YYYY-MM-DD HH:mm');
                            }
                        },
                        {
                            data: "desc"
                        },
                        {
                            data: "gymMember.firstName",
                            render: function(data, type, session) {
                                return "<a class='btn-link' href='/gymmembers/details/" +
                                    session.trainerId +
                                    "'>" +
                                    session.gymMember.firstName +
                                    "</a>";
                            }
                        },
                        {
                            data: "id",
                            render: function(data) {
                                return "<button data-session-id=" +
                                    data +
                                    "  class='btn btn-default js-joinsession'>Join Session</button>"
                            }
                        }
                    ]

                }
            );
            upcomingsessionstable.on("click",
                ".js-joinsession",
                function() {
                    var button = $(this)
                    if (confirm("Are you sure you want to join in this session?")) {


                        var clashing = false;

                        var sessionId = button.attr("data-session-id");

                        var sessionToJoin = {}
                        var clashingSession = {}
                        data.forEach(function (item) {
                            if (parseInt(item.id) === parseInt(sessionId)) {
                                sessionToJoin = item;
                                return false;
                            }
                        });

                        var sessionAt = moment(sessionToJoin.start, 'YYYY-MM-DDTHH:mm');

                        joinedSessions.forEach(function (item) {
                            var existingSessionStart = moment(item.start, 'YYYY-MM-DDTHH:mm');
                            var twoHoursBeforeStart = moment(existingSessionStart).add(-2, 'hours');
                            var twoHoursAfterStart = moment(existingSessionStart).add(2, 'hours');

                            if (parseInt(sessionId) !== parseInt(item.id) &&
                            (sessionAt.isSame(existingSessionStart) ||
                                sessionAt.isAfter(twoHoursBeforeStart) &&
                                sessionAt.isBefore(twoHoursAfterStart))) {
                                clashingSession = item;
                                clashing = true;
                                return false;
                            }
                        });


                        if (!clashing) {
                            $.ajax({
                                url: '/GymMembers/JoinSession/' + button.attr("data-session-id"),
                                method: "POST",
                                success: function() {
                                    toastr.success("Successfully Joined Session");
                                    upcomingtable.ajax.reload();
                                    joinedtable.ajax.reload();
                                    data.forEach(function (item) {
                                        if (parseInt(item.id) === parseInt(sessionId)) {
                                            item.joined = !item.joined;
                                            return false;
                                        }
                                    });

                                    joinedSessions = [];
                                    upcomingSessions = [];

                                    data.forEach(function (item) {
                                        if (item.joined)
                                            joinedSessions.push(item);
                                    });

                                    data.forEach(function (item) {
                                        if (!item.joined)
                                            upcomingSessions.push(item);
                                    });

                                },
                                error: function() {
                                    toastr.error("Could not join you to the session");

                                }

                            });

                        } else {
                            toastr.error("Cannot join. Clashing with session " + clashingSession.title);
                        }


                    }
                });
        });
    </script>
}

